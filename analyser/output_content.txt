packagecalculator;importat.dotpoint.math.MathUtil;importat.dotpoint.math.vector.Vector2;/***containingalllinesofthegivenorthogonalpolygonaswellasgeneratedlinesduetosplit-points*manages2seperatesortedlists(vertical,horizontal)for(very)efficientintersectiontests**authorRK*/classPenis//ollaclassEdgeContainer{/***y-axissortedlistofedges(pairofvertices)alongthex-axis*/publicvarhorizontal:Array<Vertex>;/***x-axissortedlistofedges(pairofvertices)alongthey-axis*/publicvarvertical:Array<Vertex>;//************************************************************************////Constructor//************************************************************************//publicfunctionnew(){this.vertical=newArray<Vertex>();this.horizontal=newArray<Vertex>();}//************************************************************************////Methods//************************************************************************///***insertsanewlinebetweenthegivenvertices.dependingontheorientation*itwillbeinternallysortedintotheverticalorhorizontallist**parama*paramb*/publicfunctioninsert(a:Vertex,b:Vertex):Void{if(this.isVertical(a,b)){varindex:Int=this.getIndex(a.x,true);this.vertical.insert(index*2,a);this.vertical.insert(index*2,b);}else{varindex:Int=this.getIndex(a.y,false);this.horizontal.insert(index*2,a);this.horizontal.insert(index*2,b);}}/***BUG:mightremovewrongNodes,causingEdgestobecomediagonaleven...moretestsrequired...**parama*paramb*/publicfunctionremove(a:Vertex,b:Vertex):Void{if(this.isVertical(a,b)){this.vertical.remove(a);this.vertical.remove(b);}else{this.horizontal.remove(a);this.horizontal.remove(b);}}//-----------------------------------////-----------------------------------///***checksifthegivenray(linedirection)originatingfromthegivenvertex(start)*intersectswithanygivenline,ifso:insertanewvertexontheintersectionpoint,*adjustthegraph(newneighbors),addanewline(betweenstartandintersection)and*returnthisnewintersection-vertex**TODO:removegraphmanipulationandjustreturnthenecessarydata(edge+splitpoint)*TODO:hlength/vlengthcouldbecalculatedforaminimumand"<="seemswrong*TODO:macrotoreplaceduplicatecode(flipx,ycoordinates)**paramstartpositiontheraystarts*paramdirdirectiontherayshootsuntilithitsaperpendicularedge*returnnewvertexcreatedonthelinetherayintersectswith*/publicfunctionsplit(start:Vertex,dir:Vector2):Vertex{varisVertical:Bool=Math.abs(dir.x)<Math.abs(dir.y);if(isVertical)//verticalray,checkhorizontallines{varystep:Int=dir.y<0?-1:1;//directiontoiteratethroughthey-sortedlistvarhstart:Int=this.getIndex(start.y,false)-1;//startindexwheretheiterationshouldbeginvarhlength:Int=this.horizontal.length>>1;//maximumamountofsteps:alllines(sincelinesare2points:length*0.5)//----------------////trace("vcheck:",hstart,ystep,hlength);while((hstart+=ystep)>=0hstart<=hlength)//whilestillinboundsofthehorizontal-list{varhindex:Int=hstart*2;//getlineindextocheckintersectionvara:Vertex=this.horizontal[hindex+0];//line...varb:Vertex=this.horizontal[hindex+1];if(a==startb==start)//ignorethelinetherayoriginatesfrom(alwaysintersectsandiswrong)continue;if((start.x>=a.xstart.x<=b.x)//doestherayintersectwiththecurrentone?(start.x>=b.xstart.x<=a.x)){returnthis.insertSplit(start,a,b);//insertnewline,adjustgraphandreturnnewvertex}}}else//horizontalray,checkverticallines:sameasabovebutflippedcoordinates.{varxstep:Int=dir.x<0?-1:1;varvstart:Int=this.getIndex(start.x,true)-1;varvlength:Int=this.vertical.length>>1;//----------------////trace("hcheck:",vstart,xstep,vlength);while((vstart+=xstep)>=0vstart<=vlength){varvindex:Int=vstart*2;vara:Vertex=this.vertical[vindex+0];varb:Vertex=this.vertical[vindex+1];if(a==startb==start)continue;if((start.y>=a.ystart.y<=b.y)(start.y>=b.ystart.y<=a.y)){returnthis.insertSplit(start,a,b);}}}returnnull;}/***-insertanewvertexbetweentheverticesaandb*-addanewlinebetweenthisnewintersectionvertexandthestartvertex*-adjustgraphwithnewneighbors*-returnnewintersectionvertex**return*/privatefunctioninsertSplit(start:Vertex,a:Vertex,b:Vertex):Vertex{varsplit:Vertex=newVertex(null);split.index=Math.min(a.index,b.index)+Math.min(1,Math.abs(b.index-a.index))*0.5;if(this.isVertical(a,b))//verticaledge,horizontalraythatsplitstheedge{split.x=a.x;split.y=start.y;}else{split.x=start.x;split.y=a.y;}ifdebugtrace("split",start,"--X--",a,b+":["+split.index+"]");end//-------------------////adjustedges:this.remove(a,b);this.insert(split,start);this.insert(split,a);this.insert(split,b);//-------------------////adjustgraph:a.removeNeighbor(b);b.removeNeighbor(a);a.insertNeighbor(split);b.insertNeighbor(split);split.insertNeighbor(start);split.insertNeighbor(a);split.insertNeighbor(b);start.insertNeighbor(split);//-------------------//returnsplit;}//-----------------------------------////-----------------------------------///***searchesfortheclosestedgetothegivencoordinate**paramvaluex-coordinateforvertical,y-coordinateforhorizontal*returnindexwheretheedgewouldbeinserted-1*/privatefunctiongetIndex(value:Float,isVertical:Bool):Int{if(isVertical){varvlength:Int=this.vertical.length>>1;for(vin0...vlength){if(this.vertical[v*2].x>value)returnv;}returnvlength;}else{varhlength:Int=this.horizontal.length>>1;for(hin0...hlength){if(this.horizontal[h*2].y>value)returnh;}returnhlength;}return-1;}/****parama*paramb*/publicfunctionisVertical(a:Vertex,b:Vertex):Bool{ifdebugif(!MathUtil.isEqual(a.x,b.x)!MathUtil.isEqual(a.y,b.y))throw"bothverticesarenotperpendicular";endreturnMathUtil.isEqual(a.x,b.x);}}