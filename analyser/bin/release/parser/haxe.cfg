{
  "extensions":["hx"],

  "keywords":
  [
    "abstract",
    "break",
    "case",
    "cast",
    "catch",
    "class",
    "continue",
    "default",
    "do",
    "dynamic",
    "else",
    "enum",
    "extends",
    "extern",
    "false",
    "for",
    "function",
    "if",
    "implements",
    "import",
    "in",
    "inline",
    "interface",
    "macro",
    "new",
    "null",
    "override",
    "package",
    "private",
    "public",
    "return",
    "static",
    "switch",
    "this",
    "throw",
    "true",
    "try",
    "typedef",
    "untyped",
    "using",
    "var",
    "while"
  ],

  "tokens":
  [
    {
      "name":"name",
      "expression":"[a-zA-Z]+[a-zA-Z0-9]*"
    },
    {
      "name":"number",
      "expression":"\\d"
    },

    {
      "name":"dot",
      "expression":"\\."
    },
    {
      "name":"semicolon",
      "expression":";"
    },
    {
      "name":"colon",
      "expression":":"
    },
    {
      "name":"comma",
      "expression":","
    },

    {
      "name":"comment_inline",
      "expression":"\\/\\/"
    },
    {
      "name":"block_comment_open",
      "expression":"\\/\\*"
    },
    {
      "name":"block_comment_close",
      "expression":"\\*\\/"
    },

    {
      "name":"bracket_round_open",
      "expression":"\\("
    },
    {
      "name":"bracket_round_close",
      "expression":"\\)"
    },
    {
      "name":"bracket_curly_open",
      "expression":"\\{"
    },
    {
      "name":"bracket_curly_close",
      "expression":"\\}"
    },
    {
      "name":"bracket_square_open",
      "expression":"\\["
    },
    {
      "name":"bracket_square_close",
      "expression":"\\]"
    },
    {
      "name":"bracket_diamond_open",
      "expression":"\\<"
    },
    {
      "name":"bracket_diamond_close",
      "expression":"\\>"
    },
    {
      "name":"string_double_quote",
      "expression":"\\\""
    },
    {
      "name":"string_single_quote",
      "expression":"\\'"
    },

    {
      "name":"operator",
      "expression":"=|\\+|-|\\*|\\/|!|\\?"
    }
  ],

  "patterns":
  [
    {
      "name":"file",
      "expressions":[["class_declaration+"]]
    },

    {
      "name":"visibility_qualifier",
      "expressions":[["public"],["private"]]
    },

    {
      "name":"class_declaration_qualifier",
      "expressions":
        [
          ["visibility_qualifier","abstract?","extern?"],
          ["visibility_qualifier","extern?","abstract?"],
          ["extern","abstract?","visibility_qualifier?"],
          ["extern","visibility_qualifier?","abstract?"],
          ["abstract","visibility_qualifier?","extern?"],
          ["abstract","extern?","visibility_qualifier?"]
        ]
    },

    {
      "name":"type_declaration",
      "expressions":[["name","type_generic?"]]
    },

    {
       "name":"type_declaration_list",
       "expressions":[["comma","type_declaration"]]
    },

    {
      "name":"type_generic",
      "expressions":[["bracket_diamond_open","type_declaration","type_declaration_list*","bracket_diamond_close"]]
    },

    {
      "name":"class_declaration",
      "expressions":[["class_declaration_qualifier?","class","type_declaration"]]
    }

  ]
}